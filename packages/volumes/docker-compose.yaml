version: "3.9"
services:
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
    ports:
      # AMQP protocol port
      - "5672:5672"
      # Management UI
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
  gateway:
    container_name: gateway
    build:
      context: ../api-gateway
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3000:3000
    env_file: ../api-gateway/configs/.env
    volumes:
      - ../api-gateway/src:/app/src
    environment:
      # OUTSOURCE SERVICE
      - AUTH_SERVICE_URL=http://auth:3001
      - NOTIFICATION_SERVICE_URL=http://notification:3002
      - USER_SERVICE_URL=http://user:3003
      - EVENT_SERVICE_URL=http://event:3004
      - APPLICATION_SERVICE_URL=http://application:3005
  auth:
    container_name: auth
    build:
      context: ../auth
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3001:3001
    env_file: ../auth/configs/.env
    volumes:
      - ../auth/src:/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
  user:
    container_name: user
    build:
      context: ../user
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3003:3003
    env_file: ../user/configs/.env
    volumes:
      - ../user/src:/app/src
  notification:
    container_name: notification
    build:
      context: ../notification
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3002:3002
    env_file: ../notification/configs/.env
    volumes:
      - ../notification/src:/app/src
    environment:
      - RABBITMQ_ENDPOINT=amqp://myuser:mypassword@rabbitmq_container:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
  # event:
  #   container_name: event
  #   build:
  #     context: ../event
  #     dockerfile: Dockerfile.dev
  #   restart: always
  #   ports:
  #     - 3004:3004
  #   volumes:
  #     - ../event/src:/app/src
  # application:
  #   container_name: application
  #   build:
  #     context: ../application
  #     dockerfile: Dockerfile.dev
  #   restart: always
  #   ports:
  #     - 3005:3005
  #   env_file: ../application/configs/.env
  #   volumes:
  #     - ../application/src:/app/src
networks:
  default:
    driver: bridge
